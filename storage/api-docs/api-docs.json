{
    "openapi": "3.0.0",
    "info": {
        "title": "E-commerce Documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Login",
                "description": "Login Admin and Create token",
                "operationId": "login",
                "requestBody": {
                    "description": "store admin data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "email",
                                        "format": "email",
                                        "example": "admin@gmail.com"
                                    },
                                    "password": {
                                        "type": "password",
                                        "format": "email",
                                        "example": "password12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Returns when user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logedin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admins": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get list of Admins",
                "description": "Returns list of Admin  Data",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "admins": {
                                            "$ref": "#/components/schemas/Admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "create admin",
                "description": "create new admin ",
                "operationId": "store",
                "requestBody": {
                    "description": "store new Admin name",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "contact",
                                    "country_id",
                                    "city_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Admin"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "Admin@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password12345"
                                    },
                                    "contact": {
                                        "type": "string",
                                        "example": "01234567891"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "city_id": {
                                        "type": "integer",
                                        "example": "4"
                                    },
                                    "role": {
                                        "type": "integer",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Admin created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Admin can't be created try later"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admins/{admin}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get Admin profile",
                "description": "Returns Admins profile Data",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "admin",
                        "in": "path",
                        "description": "Admin id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "admin": {
                                            "$ref": "#/components/schemas/Admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "update existing admin",
                "description": "update admin",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "admin",
                        "in": "path",
                        "description": "admin id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "update admin ",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "country_id",
                                    "city_id",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Admin"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "Admin@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password12345"
                                    },
                                    "contact": {
                                        "type": "string",
                                        "example": "01234567891"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "city_id": {
                                        "type": "integer",
                                        "example": "4"
                                    },
                                    "role": {
                                        "type": "integer",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "category updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "validation error": {
                                            "type": "string",
                                            "example": "Sorry, invalid category name"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete existing Admin",
                "description": "Deletes a Admin and returns no Message",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "admin",
                        "in": "path",
                        "description": "Admin id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Admin Moved to trash"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Logout",
                "description": "Logout Admin and delete token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logedout"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cart/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get list of products Details in cart",
                "description": "Returns list of product Data",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cart/create": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "new cart",
                "description": "view product in cart",
                "operationId": "create",
                "requestBody": {
                    "description": "Create new product",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "item": {
                                        "type": "array",
                                        "items": {}
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart created Successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid Data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cart/delete": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Delete products From cart",
                "description": "Delete Cart",
                "operationId": "delete",
                "responses": {
                    "200": {
                        "description": "Cart Item Deleted Successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories/all": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Show Categories",
                "description": "Show Categories",
                "operationId": "categoriesShow",
                "responses": {
                    "200": {
                        "description": "all Category ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories/create": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create Category",
                "description": "Create Using name",
                "operationId": "CategoryCreate",
                "requestBody": {
                    "description": "Pass category name",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "Action"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "format": "text",
                                        "example": "0"
                                    },
                                    "persistent": {
                                        "type": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "new Category add successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "format": "text",
                                            "example": "You Are Not Authorized!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Category Must be String",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, Category Required. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories/update/{id}": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Update Category",
                "description": "Update Using name",
                "operationId": "CategoryUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of categories",
                        "required": true,
                        "example": "2"
                    }
                ],
                "requestBody": {
                    "description": "Pass category name",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "Action"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "format": "text",
                                        "example": "0"
                                    },
                                    "persistent": {
                                        "type": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "new Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "format": "text",
                                            "example": "You Are Not Authorized!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Category Must be String",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, Category Required. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories/delete/{id}": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete Category",
                "description": "Delete Category",
                "operationId": "categoryDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category Deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "format": "text",
                                            "example": "Category deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "format": "text",
                                            "example": "You Are Not Authorized!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The given data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories/restore/{id}": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Restore delete Category",
                "description": "restore Category",
                "operationId": "restore specific Category",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "format": "text",
                                            "example": "Category restored successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "format": "text",
                                            "example": "You Are Not Authorized!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories/restore-all": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Restore All delete Category",
                "description": "restore All Category",
                "operationId": "restore All Category",
                "responses": {
                    "200": {
                        "description": "All Category restored",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "format": "text",
                                            "example": "All Category restored successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "format": "text",
                                            "example": "You Are Not Authorized!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/permissions": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Show Permissions",
                "description": "Show Permissions",
                "operationId": "permissionShow",
                "responses": {
                    "200": {
                        "description": "Permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/permissions/create": {
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Create new Permission",
                "description": "Create new Permission",
                "operationId": "permissionCreate",
                "requestBody": {
                    "description": "Insert permission name",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "create user"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permission created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The given data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/permissions/{id}/edit": {
            "put": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Update Permission",
                "description": "Update Permission",
                "operationId": "permissionEdit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of permission",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "description": "update permission name",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "create user"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permission created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permission created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The given data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/permissions/{id}/delete": {
            "delete": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Delete Permission",
                "description": "Delete Permission",
                "operationId": "permissionDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of permission",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission Deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "format": "text",
                                            "example": "Permission deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The given data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get list of products",
                "description": "Returns list of product Data",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "products": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "new product",
                "description": "store new product",
                "operationId": "store",
                "requestBody": {
                    "description": "Store new product",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "price",
                                    "in_stock",
                                    "price_after",
                                    "vendor_id",
                                    "specs"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "iphone 12 pro"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Main Characteristics: ......"
                                    },
                                    "in_stock": {
                                        "type": "integer",
                                        "example": "111"
                                    },
                                    "price": {
                                        "type": "double",
                                        "example": "111.00"
                                    },
                                    "price_after": {
                                        "type": "double",
                                        "example": "111.05"
                                    },
                                    "has_offer": {
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "vendor_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "specs": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "value": {
                                                    "type": "string"
                                                },
                                                "spec_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "product created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "product can't be created try later"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/search": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "search",
                "description": "Search for product",
                "operationId": "search",
                "requestBody": {
                    "description": "Search for product",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term"
                                ],
                                "properties": {
                                    "term": {
                                        "type": "string",
                                        "example": "samsung"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "products": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "no such this product match try later"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{product}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get specific product ",
                "description": "Returns specific product Data",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "product": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "update existing product",
                "description": "update product",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "update product name",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "price",
                                    "in_stock",
                                    "price_after",
                                    "vendor_id",
                                    "specs"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "iphone 12 pro"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Main Characteristics: ......"
                                    },
                                    "in_stock": {
                                        "type": "integer",
                                        "example": "111"
                                    },
                                    "price": {
                                        "type": "double",
                                        "example": "111.00"
                                    },
                                    "price_after": {
                                        "type": "double",
                                        "example": "111.05"
                                    },
                                    "has_offer": {
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "vendor_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "specs": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "value": {
                                                    "type": "string"
                                                },
                                                "spec_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "product": {
                                            "$ref": "#/components/schemas/Product"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "product updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "validation error": {
                                            "type": "string",
                                            "example": "Sorry, invalid product name"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete existing product",
                "description": "Delete existing product ",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "product Moved to trash"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/rates": {
            "get": {
                "tags": [
                    "Rates"
                ],
                "summary": "Get list of rates",
                "description": "Returns list of rates",
                "operationId": "get all rates",
                "responses": {
                    "200": {
                        "description": "All rates"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/rates/show": {
            "get": {
                "tags": [
                    "Rates"
                ],
                "summary": "show specific rate",
                "description": "show specific rate",
                "operationId": "show specific Rate",
                "parameters": [
                    {
                        "name": "rate_id",
                        "in": "query",
                        "description": "Enter rate id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "rate details"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/rates/create": {
            "post": {
                "tags": [
                    "Rates"
                ],
                "summary": "Create new Rate",
                "description": "Add new Rate",
                "operationId": "create new rate",
                "requestBody": {
                    "description": "Pass Rate credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rate",
                                    "product_id"
                                ],
                                "properties": {
                                    "rate": {
                                        "type": "string",
                                        "format": "rate",
                                        "example": "1"
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "format": "product_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rate created successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/rates/edit": {
            "post": {
                "tags": [
                    "Rates"
                ],
                "summary": "Update rate",
                "description": "Edit rate",
                "operationId": "update rate",
                "requestBody": {
                    "description": "Pass rate credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "rate_id"
                                ],
                                "properties": {
                                    "rate_id": {
                                        "type": "integer",
                                        "format": "rate_id",
                                        "example": "1"
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "format": "product_id",
                                        "example": "1"
                                    },
                                    "rate": {
                                        "type": "string",
                                        "example": "3"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rate update successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/rates/delete": {
            "post": {
                "tags": [
                    "Rates"
                ],
                "summary": "Soft delete rate",
                "description": "Soft delete rate",
                "operationId": "delete specific rate",
                "requestBody": {
                    "description": "Pass rate credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rate_id"
                                ],
                                "properties": {
                                    "rate_id": {
                                        "type": "integer",
                                        "format": "rate_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rate deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/rates/restore": {
            "post": {
                "tags": [
                    "Rates"
                ],
                "summary": "Restore delete rate",
                "description": "restore rate",
                "operationId": "restore specific rate",
                "requestBody": {
                    "description": "Pass rate credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rate_id"
                                ],
                                "properties": {
                                    "rate_id": {
                                        "type": "integer",
                                        "format": "rate_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rate restored successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get list of reviews",
                "description": "Returns list of reviews",
                "operationId": "get all reviews",
                "responses": {
                    "200": {
                        "description": "All Reviews"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/reviews/show": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "show specific review",
                "description": "show specific review",
                "operationId": "show specific Review",
                "parameters": [
                    {
                        "name": "review_id",
                        "in": "query",
                        "description": "Enter review id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "review details"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/reviews/create": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Create new Review",
                "description": "Add new Review",
                "operationId": "create new review",
                "requestBody": {
                    "description": "Pass Review credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "review",
                                    "product_id"
                                ],
                                "properties": {
                                    "review": {
                                        "type": "string",
                                        "format": "review",
                                        "example": "good"
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "format": "product_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review created successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/reviews/edit": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Update review",
                "description": "Edit review",
                "operationId": "update review",
                "requestBody": {
                    "description": "Pass review credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "review_id"
                                ],
                                "properties": {
                                    "review_id": {
                                        "type": "integer",
                                        "format": "review_id",
                                        "example": "1"
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "format": "product_id",
                                        "example": "1"
                                    },
                                    "review": {
                                        "type": "string",
                                        "example": "3"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review update successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/reviews/delete": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Soft delete review",
                "description": "Soft delete review",
                "operationId": "delete specific review",
                "requestBody": {
                    "description": "Pass review credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "review_id"
                                ],
                                "properties": {
                                    "review_id": {
                                        "type": "integer",
                                        "format": "review_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/reviews/restore": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Restore delete review",
                "description": "restore review",
                "operationId": "restore specific review",
                "requestBody": {
                    "description": "Pass review credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "review_id"
                                ],
                                "properties": {
                                    "review_id": {
                                        "type": "integer",
                                        "format": "review_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review restored successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Show Role",
                "description": "Show Roles",
                "operationId": "roleShow",
                "responses": {
                    "200": {
                        "description": "Roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/roles/create": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Create new Role",
                "description": "Create new Role",
                "operationId": "roleCreate",
                "requestBody": {
                    "description": "Insert role name",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The given data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/roles/{id}/edit": {
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Edit Role",
                "description": "Edit Role",
                "operationId": "roleEdit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "description": "Role updated successfully",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permission created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The given data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/roles/{id}/delete": {
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete Role",
                "description": "Delete Role",
                "operationId": "roleDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role Deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "format": "text",
                                            "example": "Permission deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The given data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/roles/{id}/assign-permissions": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Assign permission to role",
                "description": "Assign permission to role",
                "operationId": "assignPermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of role",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "description": "Insert permission id",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "number"
                                        },
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions assigned to the role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The given data was invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/specs": {
            "get": {
                "tags": [
                    "Spec"
                ],
                "summary": "Get list of specs",
                "description": "Returns list of specs Data",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "specs": {
                                            "$ref": "#/components/schemas/Spec"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Spec"
                ],
                "summary": "new Spec",
                "description": "store new Spec",
                "operationId": "store",
                "requestBody": {
                    "description": "Pass new spec name",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "color"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "spec created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "spec can't be created try later"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/specs/{spec}": {
            "get": {
                "tags": [
                    "Spec"
                ],
                "summary": "Get specific Spec ",
                "description": "Returns specific Spec Data",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "spec",
                        "in": "path",
                        "description": "spec id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "spec": {
                                            "$ref": "#/components/schemas/Spec"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Spec"
                ],
                "summary": "update existing spec",
                "description": "update spec",
                "operationId": "updatespec",
                "parameters": [
                    {
                        "name": "spec",
                        "in": "path",
                        "description": "spec id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "update spec name",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "color"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "spec updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "validation error": {
                                            "type": "string",
                                            "example": "Sorry, invalid spec name"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Spec"
                ],
                "summary": "Delete existing spec",
                "description": "Delete existing spec ",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "spec",
                        "in": "path",
                        "description": "spec id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "spec Moved to trash"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "register",
                "description": "register by name , email and password",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "Fill your Data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "User"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Sign in",
                "description": "Login by email and password",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    },
                                    "persistent": {
                                        "type": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/logout": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Logout",
                "description": "Logout by email, password",
                "operationId": "authLogout",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/update-password": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Update password",
                "description": "Update password",
                "operationId": "update password",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "old_password",
                                    "new_password"
                                ],
                                "properties": {
                                    "old_password": {
                                        "type": "string",
                                        "format": "old_password",
                                        "example": "12345678"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "new_password",
                                        "example": "123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password update successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "get all users",
                "responses": {
                    "200": {
                        "description": "All users"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/show": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "show specific user",
                "description": "show specific user",
                "operationId": "show specific User",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Enter User id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/vendors/register": {
            "post": {
                "tags": [
                    "Vendors"
                ],
                "summary": "register",
                "description": "register by name , email and password",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "Fill your Data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "contact",
                                    "country_id",
                                    "city_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "vendor"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "vendor@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    },
                                    "contact": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "format": "country_id",
                                        "example": "1"
                                    },
                                    "city_id": {
                                        "type": "integer",
                                        "format": "city_id",
                                        "example": "1"
                                    },
                                    "persistent": {
                                        "type": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vendors/login": {
            "post": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Sign in",
                "description": "Login by email and password",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "vendor@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    },
                                    "persistent": {
                                        "type": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vendors/logout": {
            "post": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Logout",
                "description": "Logout by email, password",
                "operationId": "authLogout",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/vendors/update-password": {
            "post": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Update Password",
                "description": "Update Password",
                "operationId": "update password",
                "requestBody": {
                    "description": "Pass vendor credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "old_password",
                                    "new_password"
                                ],
                                "properties": {
                                    "old_password": {
                                        "type": "string",
                                        "format": "old_password",
                                        "example": "12345678"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "new_password",
                                        "example": "123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password update successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/vendors": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Get list of vendors",
                "description": "Returns list of vendors",
                "operationId": "get all vendors",
                "responses": {
                    "200": {
                        "description": "All vendors"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/vendors/show": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "show specific vendor",
                "description": "show specific vendor",
                "operationId": "show specific Vendor",
                "responses": {
                    "200": {
                        "description": "User details"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/vendors/edit": {
            "post": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Update Vendor",
                "description": "Edit vendor",
                "operationId": "update vendor",
                "requestBody": {
                    "description": "Pass vendor credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "contact",
                                    "country_id",
                                    "city_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "user"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    },
                                    "contact": {
                                        "type": "string",
                                        "example": "01000"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "format": "country_id",
                                        "example": "1"
                                    },
                                    "city_id": {
                                        "type": "integer",
                                        "format": "city_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vendor update successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/vendors/delete": {
            "post": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Soft delete vendor",
                "description": "Soft delete vendor",
                "operationId": "delete specific vendor",
                "requestBody": {
                    "description": "Pass vendor credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "vendor_id"
                                ],
                                "properties": {
                                    "vendor_id": {
                                        "type": "integer",
                                        "format": "vendor_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vendor deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/vendors/restore": {
            "post": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Restore delete vendor",
                "description": "restore vendor",
                "operationId": "restore specific vendor",
                "requestBody": {
                    "description": "Pass vendor credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "vendor_id"
                                ],
                                "properties": {
                                    "vendor_id": {
                                        "type": "integer",
                                        "format": "vendor_id",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vendor restored successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Admin": {
                "required": [
                    "country_id",
                    "city_id",
                    "name",
                    "email",
                    "password",
                    "contact"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "email": {
                        "description": "Admin unique email address",
                        "type": "string",
                        "format": "email",
                        "readOnly": "true",
                        "example": "Admin@gmail.com"
                    },
                    "name": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "Admin"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "readOnly": "true",
                        "example": "password12345"
                    },
                    "contact": {
                        "description": "Admin unique mobile number",
                        "type": "string",
                        "readOnly": "true",
                        "example": "01234567891"
                    },
                    "country_id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "2"
                    },
                    "city_id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "4"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Admin"
                }
            },
            "Category": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "description": "Category unique name ",
                        "type": "string",
                        "readOnly": "true",
                        "example": "Clothes"
                    },
                    "parent_id": {
                        "description": "Category parent name ",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "0"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Category"
                }
            },
            "City": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "description": "Category unique name ",
                        "type": "string",
                        "readOnly": "true",
                        "example": "Backend"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Category"
                }
            },
            "Country": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "description": "Category unique name ",
                        "type": "string",
                        "readOnly": "true",
                        "example": "Backend"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Category"
                }
            },
            "Image": {
                "required": [
                    "image",
                    ""
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "image": {
                        "description": "image path http//:public/image.jpg",
                        "type": "string",
                        "readOnly": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Image"
                }
            },
            "Order": {
                "required": [
                    "status",
                    "shipping",
                    "total"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "status": {
                        "description": "",
                        "type": "integer",
                        "readOnly": "true"
                    },
                    "shipping": {
                        "description": "",
                        "type": "douple",
                        "readOnly": "true"
                    },
                    "total": {
                        "description": "",
                        "type": "douple",
                        "readOnly": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Order"
                }
            },
            "Payment": {
                "required": [
                    "status",
                    "type",
                    "code"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "status": {
                        "description": "",
                        "type": "boolean",
                        "readOnly": "true"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "readOnly": "true"
                    },
                    "code": {
                        "description": "",
                        "type": "string",
                        "readOnly": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Order"
                }
            },
            "Product": {
                "required": [
                    "name",
                    "description",
                    "price",
                    "in_stock",
                    "price_after",
                    "vendor_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "description": {
                        "description": "Product description",
                        "type": "string",
                        "readOnly": "true",
                        "example": "Main Characteristics: ......"
                    },
                    "in_stock": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "111"
                    },
                    "price": {
                        "type": "double",
                        "readOnly": "true",
                        "example": "111.00"
                    },
                    "price_after": {
                        "type": "double",
                        "readOnly": "true",
                        "example": "111.05"
                    },
                    "has_offer": {
                        "type": "boolean",
                        "readOnly": "true",
                        "example": "false"
                    },
                    "vendor_id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Product"
                }
            },
            "Rate": {
                "required": [
                    "rate",
                    "product_id",
                    "user_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Rate"
                }
            },
            "Review": {
                "required": [
                    "review",
                    "product_id",
                    "user_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Review"
                }
            },
            "Spec": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "color"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Spec"
                }
            },
            "User": {
                "required": [
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "email": {
                        "description": "User unique email address",
                        "type": "string",
                        "format": "email",
                        "readOnly": "true",
                        "example": "user@gmail.com"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Laravel Sanctum token authentication",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        []
    ]
}